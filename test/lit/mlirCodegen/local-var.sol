// RUN: solc --mlir-action=print-init --mmlir --mlir-print-debuginfo %s | FileCheck %s

contract C {
  function defInit() public view returns(uint256) {
    uint256 ui256;
    return ui256;
  }

  function init() public view returns(uint256) {
    uint256 ui256 = 42;
    return ui256;
  }
}

// NOTE: Assertions have been autogenerated by test/updFileCheckTest.py
// CHECK: module {
// CHECK-NEXT:   sol.contract @C_24 {
// CHECK-NEXT:     sol.func @defInit_11() -> ui256 attributes {state_mutability = #sol<StateMutability View>} {
// CHECK-NEXT:       %0 = sol.alloca : !sol.ptr<ui256, Stack> loc(#loc3)
// CHECK-NEXT:       %c0_ui256 = sol.constant 0 : ui256 loc(#loc3)
// CHECK-NEXT:       sol.store %c0_ui256, %0 : ui256, !sol.ptr<ui256, Stack> loc(#loc3)
// CHECK-NEXT:       %1 = sol.load %0 : !sol.ptr<ui256, Stack>, ui256 loc(#loc4)
// CHECK-NEXT:       sol.return %1 : ui256 loc(#loc5)
// CHECK-NEXT:     } loc(#loc2)
// CHECK-NEXT:     sol.func @init_23() -> ui256 attributes {state_mutability = #sol<StateMutability View>} {
// CHECK-NEXT:       %0 = sol.alloca : !sol.ptr<ui256, Stack> loc(#loc7)
// CHECK-NEXT:       %c42_ui8 = sol.constant 42 : ui8 loc(#loc8)
// CHECK-NEXT:       %1 = sol.ext %c42_ui8 : ui8 to ui256 loc(#loc8)
// CHECK-NEXT:       sol.store %1, %0 : ui256, !sol.ptr<ui256, Stack> loc(#loc7)
// CHECK-NEXT:       %2 = sol.load %0 : !sol.ptr<ui256, Stack>, ui256 loc(#loc9)
// CHECK-NEXT:       sol.return %2 : ui256 loc(#loc10)
// CHECK-NEXT:     } loc(#loc6)
// CHECK-NEXT:   } {interface_fns = [{selector = -584775204 : i32, sym = @defInit_11, type = () -> ui256}, {selector = -507037398 : i32, sym = @init_23, type = () -> ui256}], kind = #sol<ContractKind Contract>} loc(#loc1)
// CHECK-NEXT: } loc(#loc)
// CHECK-NEXT: #loc = loc(unknown)
// CHECK-NEXT: #loc1 = loc({{.*}}:2:0)
// CHECK-NEXT: #loc2 = loc({{.*}}:3:2)
// CHECK-NEXT: #loc3 = loc({{.*}}:4:4)
// CHECK-NEXT: #loc4 = loc({{.*}}:5:11)
// CHECK-NEXT: #loc5 = loc({{.*}}:5:4)
// CHECK-NEXT: #loc6 = loc({{.*}}:8:2)
// CHECK-NEXT: #loc7 = loc({{.*}}:9:4)
// CHECK-NEXT: #loc8 = loc({{.*}}:9:20)
// CHECK-NEXT: #loc9 = loc({{.*}}:10:11)
// CHECK-NEXT: #loc10 = loc({{.*}}:10:4)
// CHECK-EMPTY:
