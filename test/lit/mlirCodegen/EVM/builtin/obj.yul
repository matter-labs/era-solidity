// RUN: solc --strict-assembly --mlir-action=print-std-mlir --mlir-target=evm --mmlir --mlir-print-debuginfo %s | FileCheck %s

object "Test" {
  code {
    return(10, 11)
  }
  object "Test_deployed" {
    code {
      return(20, 21)
    }
  }
}

// NOTE: Assertions have been autogenerated by test/updFileCheckTest.py
// CHECK: module {
// CHECK-NEXT:   func.func private @".unreachable"() attributes {llvm.linkage = #llvm.linkage<private>, passthrough = ["nofree", "null_pointer_is_valid"]} {
// CHECK-NEXT:     llvm.unreachable loc(#loc1)
// CHECK-NEXT:   } loc(#loc)
// CHECK-NEXT:   func.func @__entry() attributes {llvm.linkage = #llvm.linkage<private>, passthrough = ["nofree", "null_pointer_is_valid"]} {
// CHECK-NEXT:     %c10_i256 = arith.constant 10 : i256 loc(#loc2)
// CHECK-NEXT:     %c11_i256 = arith.constant 11 : i256 loc(#loc3)
// CHECK-NEXT:     %0 = llvm.inttoptr %c10_i256 : i256 to !llvm.ptr<1> loc(#loc1)
// CHECK-NEXT:     "llvm.intrcall"(%0, %c11_i256) <{id = 3251 : i32, name = "evm.return"}> : (!llvm.ptr<1>, i256) -> () loc(#loc1)
// CHECK-NEXT:     call @".unreachable"() : () -> () loc(#loc1)
// CHECK-NEXT:     llvm.unreachable loc(#loc)
// CHECK-NEXT:   } loc(#loc)
// CHECK-NEXT:   module @Test_deployed {
// CHECK-NEXT:     func.func private @".unreachable"() attributes {llvm.linkage = #llvm.linkage<private>, passthrough = ["nofree", "null_pointer_is_valid"]} {
// CHECK-NEXT:       llvm.unreachable loc(#loc4)
// CHECK-NEXT:     } loc(#loc)
// CHECK-NEXT:     func.func @__entry() attributes {llvm.linkage = #llvm.linkage<private>, passthrough = ["nofree", "null_pointer_is_valid"]} {
// CHECK-NEXT:       %c20_i256 = arith.constant 20 : i256 loc(#loc5)
// CHECK-NEXT:       %c21_i256 = arith.constant 21 : i256 loc(#loc6)
// CHECK-NEXT:       %0 = llvm.inttoptr %c20_i256 : i256 to !llvm.ptr<1> loc(#loc4)
// CHECK-NEXT:       "llvm.intrcall"(%0, %c21_i256) <{id = 3251 : i32, name = "evm.return"}> : (!llvm.ptr<1>, i256) -> () loc(#loc4)
// CHECK-NEXT:       call @".unreachable"() : () -> () loc(#loc4)
// CHECK-NEXT:       llvm.unreachable loc(#loc)
// CHECK-NEXT:     } loc(#loc)
// CHECK-NEXT:   } loc(#loc)
// CHECK-NEXT: } loc(#loc)
// CHECK-NEXT: #loc = loc(unknown)
// CHECK-NEXT: #loc1 = loc({{.*}}:4:4)
// CHECK-NEXT: #loc2 = loc({{.*}}:4:11)
// CHECK-NEXT: #loc3 = loc({{.*}}:4:15)
// CHECK-NEXT: #loc4 = loc({{.*}}:8:6)
// CHECK-NEXT: #loc5 = loc({{.*}}:8:13)
// CHECK-NEXT: #loc6 = loc({{.*}}:8:17)
// CHECK-EMPTY:
