
======= object_compiler/input.yul (EVM) =======

Pretty printed source:
object "MyContract" {
    code {
        {
            sstore(0, caller())
            let _1 := datasize("Runtime")
            datacopy(0, dataoffset("Runtime"), _1)
            return(0, _1)
        }
    }
    object "Runtime" {
        code {
            {
                mstore(0, sload(0))
                return(0, 0x20)
            }
        }
    }
}


Binary representation:
335f55600880600d5f395ff3fe5f545f5260205ff3

Text representation:
    /* "object_compiler/input.yul":65:73   */
  caller
    /* "object_compiler/input.yul":62:63   */
  0x00
    /* "object_compiler/input.yul":55:74   */
  sstore
    /* "object_compiler/input.yul":97:116   */
  dataSize(sub_0)
    /* "object_compiler/input.yul":141:162   */
  dup1
  dataOffset(sub_0)
    /* "object_compiler/input.yul":138:139   */
  0x00
    /* "object_compiler/input.yul":129:167   */
  codecopy
    /* "object_compiler/input.yul":187:188   */
  0x00
    /* "object_compiler/input.yul":180:193   */
  return
stop

sub_0: assembly {
        /* "object_compiler/input.yul":294:295   */
      0x00
        /* "object_compiler/input.yul":288:296   */
      sload
        /* "object_compiler/input.yul":285:286   */
      0x00
        /* "object_compiler/input.yul":278:297   */
      mstore
        /* "object_compiler/input.yul":324:328   */
      0x20
        /* "object_compiler/input.yul":321:322   */
      0x00
        /* "object_compiler/input.yul":314:329   */
      return
}
