{
  "language": "Solidity",
  "sources":
  {
    "A":
    {
      "content": "
// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.0;
contract CopyTest {
  struct Tree {
    Tree[] children;
  }
  Tree storageTree;

  function run() public view returns (uint256, uint256, uint256) {
    Tree memory memoryTree;
    memoryTree = storageTree;
    return (memoryTree.children.length, memoryTree.children[0].children.length, memoryTree.children[1].children.length);
  }
}

contract ClearArray {
  struct S {
    uint16 v;
    S[] x;
  }
  S s;

  function f() public returns (uint256 r) {
    delete s;
    r = 0;
  }
}
      "
    }
  },
  "settings":
  {
    "outputSelection":
    {
      "*": { "*": ["evm.bytecode.object", "evm.deployedBytecode.object"] }
    }
  }
}
