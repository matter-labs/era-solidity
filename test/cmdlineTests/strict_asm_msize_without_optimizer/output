
======= strict_asm_msize_without_optimizer/input.yul (EVM) =======

Pretty printed source:
object "object" {
    code {
        function f() -> x
        { x := mload(0) }
        pop(msize())
        let x := 0
        let y := x
        mstore(0, f())
    }
}


Binary representation:
600b565b5f5f51905090565b5f8060136003565b5f525050

Text representation:
  jump(tag_2)
tag_1:
  0x00
  0x00
  mload
  swap1
  pop
  swap1
  jump	// out
tag_2:
  0x00
  dup1
  tag_4
  tag_1
  jump	// in
tag_4:
  0x00
  mstore
  pop
  pop
