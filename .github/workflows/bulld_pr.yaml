name: Build binaries
on:
  pull_request:
    branches:
      - '0.6.*'
      - '0.7.*'
      - '0.8.*'

jobs:
  build_linux_amd64:
    runs-on: [ matterlabs-ci-runner ]
    container:
      image: matterlabs/llvm_runner:latest
      credentials:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout source
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
        with:
          submodules: recursive
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}

      - name: Prepare environment
        run: |
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf ssh://git@github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf https://github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf git@github.com:

      - name: Building the Solidity compiler
        run: |
          mkdir -p ./build
          cd ./build
          cmake .. -DCMAKE_BUILD_TYPE="Release" -DSOLC_VERSION_ZKEVM="0.0.0" -DUSE_Z3=OFF
          make -j$(nproc)

  build_macos_amd64:
    runs-on: macos-12-xl
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}

      - name: Prepare environment
        shell: zsh {0}
        run: |
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf ssh://git@github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf https://github.com/

      # It is needed as we use some commands which a deprecated in newer versions of boost
      - name: Install BOOST
        shell: zsh {0}
        run: |
          curl -L -o boost_1_71_0.tar.gz https://boostorg.jfrog.io/artifactory/main/release/1.71.0/source/boost_1_71_0.tar.gz
          tar xzf ./boost_1_71_0.tar.gz
          cd ./boost_1_71_0
          ./bootstrap.sh --prefix=/usr/local
          ./b2 -j12
          ./b2 install -j12

      - name: Warns not errs
        run: |
          sed -i '' -e '/option(PEDANTIC \"Enable extra warnings and pedantic build flags. Treat all warnings as errors.\" ON)/d' CMakeLists.txt
          sed -i '' -e '/add_compile_options(-Werror)/d' ./cmake/EthCompilerSettings.cmake
          sed -i '' -e '/add_compile_options(-pedantic)/d' ./cmake/EthCompilerSettings.cmake

      - name: Cmake gen
        shell: zsh {0}
        env:
          CXXFLAGS: "-Wno-narrowing"
        run: |
          mkdir -p ./build
          cd ./build
          cmake .. -DCMAKE_BUILD_TYPE="Release" -DSOLC_VERSION_ZKEVM="0.0.0" -DUSE_Z3=OFF

      - name: Building the Solidity compiler
        run: |
          cd ./build
          make -j12

  build_macos_arm64:
    runs-on: [self-hosted, macOS, ARM64]
    steps:
      - name: Clear repository
        run: rm -rf ~/.gitconfig; rm -rf {*,.*} || true

      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}

      - name: Prepare environment
        shell: zsh {0}
        run: |
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf ssh://git@github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf https://github.com/

      # It is needed as we use some commands which a deprecated in newer versions of boost
      - name: Install BOOST
        shell: zsh {0}
        run: |
          curl -L -o boost_1_71_0.tar.gz https://boostorg.jfrog.io/artifactory/main/release/1.71.0/source/boost_1_71_0.tar.gz
          tar xzf ./boost_1_71_0.tar.gz
          cd ./boost_1_71_0
          export BOOST_DIR=$(pwd)/boost
          mkdir $BOOST_DIR
          ./bootstrap.sh --prefix=$BOOST_DIR
          ./b2 -j12
          ./b2 install -j12

      - name: Warns not errs
        run: |
          sed -i '' -e '/option(PEDANTIC \"Enable extra warnings and pedantic build flags. Treat all warnings as errors.\" ON)/d' CMakeLists.txt
          sed -i '' -e '/add_compile_options(-Werror)/d' ./cmake/EthCompilerSettings.cmake
          sed -i '' -e '/add_compile_options(-pedantic)/d' ./cmake/EthCompilerSettings.cmake

      - name: Cmake gen
        shell: zsh {0}
        env:
          CXXFLAGS: "-Wno-narrowing"
        run: |
          mkdir -p ./build
          cd ./build
          cmake .. -DCMAKE_BUILD_TYPE="Release" -DSOLC_VERSION_ZKEVM="0.0.0" -DUSE_Z3=OFF

      - name: Building the Solidity compiler
        shell: zsh {0}
        run: |
          cd ./build
          make -j12

  build_win:
    runs-on: windows-2019-github-hosted-16core
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "15.0.7"

      - name: Prepare environment
        run: |
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf ssh://git@github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf https://github.com/
          git config --global user.email "runner@github.com"
          git fetch --all
          # try to apply win patch
          git cherry-pick 860226e25dca397b5afd70680530963712aff050 || git cherry-pick --abort
          # latest llvm for MSVC
          git clone -q --depth=1 --branch=main https://github.com/zufuliu/llvm-utils.git c:\projects\llvm-utils
          Invoke-Item "c:\projects\llvm-utils\VS2017\install.bat"
          # Patch specific versions with include
          $tag = '${{ github.base_ref }}'
          echo $tag
          if ($tag -eq "0.8.5" -or $tag -eq "0.8.6" -or $tag -eq "0.8.7") {
            sed -i  '/^#pragma once/a #include <optional>' ./libevmasm/AssemblyItem.h
          }
          if ($tag -eq "0.8.7") {
            sed -i  '/^#pragma once/a #include <optional>' ./libyul/Object.h
          }
          if ($tag -eq "0.5.9" -or $tag -eq "0.5.10" -or $tag -eq "0.5.11") {
            sed -i  '/^#pragma once/a #include <memory>' ./libyul/backends/wasm/EWasmAST.h
          }
          clang --version


      - name: Install windows Deps
        run: |
          if ( -not (Test-Path "deps\boost") ) {
            New-Item -ItemType Directory -Force -Path "deps"

            Invoke-WebRequest -URI "https://github.com/Kitware/CMake/releases/download/v3.27.1/cmake-3.27.1-windows-x86_64.zip" -OutFile cmake.zip

            tar -xf cmake.zip
            mv cmake-3.27.1-windows-x86_64 "deps\cmake"

            # and serving it a page that requires JavaScript.
            Invoke-WebRequest -URI "https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.zip" -OutFile boost.zip

            tar -xf boost.zip
            cd boost_1_77_0
            .\bootstrap.bat --with-toolset=clang
            .\b2 -j4 -d0 toolset=clang cxxflags="-stdlib=libc++" linkflags="-stdlib=libc++" link=static runtime-link=static variant=release threading=multi address-model=64 --prefix="..\deps\boost" --with-filesystem --with-system --with-program_options --with-test --with-regex --with-thread install
            if ( -not $? ) { throw "Error building boost." }
            cd ..
          }

      - name: Building the Solidity compiler
        run: |
          $env:path += ";deps\cmake\bin\"
          # remove warning-as-erro flag in cmake
          sed -i '/option(PEDANTIC \"Enable extra warnings and pedantic build flags. Treat all warnings as errors.\" ON)/d' CMakeLists.txt
          sed -i '/add_compile_options(-Werror)/d' ./cmake/EthCompilerSettings.cmake
          sed -i '/add_compile_options(-pedantic)/d' ./cmake/EthCompilerSettings.cmake
          sed -i '/add_compile_options(\\/WX)/d' ./cmake/EthCompilerSettings.cmake
          sed -i '/elseif (DEFINED MSVC)/d' ./cmake/EthCompilerSettings.cmake
          $env:CXXFLAGS="-Wno-narrowing -Qunused-arguments -Wno-everything -DBOOST_REGEX_NO_LIB -D_REGEX_MAX_STACK_COUNT=200000L -DJSON_USE_INT64_DOUBLE_CONVERSION -std=c++17 -stdlib=libc++"
          mkdir build
          cd build
          $boost_dir=(Resolve-Path ..\deps\boost\lib\cmake\Boost-*)
          cmake .. -D SOLC_VERSION_ZKEVM="0.0.0" -D USE_Z3="OFF" -DBoost_DIR="$boost_dir\" -DBoost_USE_STATIC_RUNTIME=1 -DBoost_USE_STATIC_LIBS=1 -DBoost_COMPILER=clang15 -T LLVM_v142 -DPEDANTIC=OFF -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded
          cmake --build . -j 10 --target install --config Release
