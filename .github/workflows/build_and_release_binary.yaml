name: Build and release binaries manually

on:
  workflow_dispatch:
    inputs:
      ZKEVM_RELEASE_TAG:
        description: 'ZK EVM Release tag'
        required: true
        default: 'v1.1.0-lts'
      BRANCH_TAG:
        description: 'Which branch use for build'
        required: true
        default: '0.8.19'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  build_macos_amd64:
    runs-on: macos-12-xl
    strategy:
      fail-fast: false
    steps:
      - name: Checkout source
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
        with:
          submodules: recursive
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}
          ref: ${{ inputs.BRANCH_TAG }}

      - name: Prepare environment
        shell: zsh {0}
        run: |
          brew install cmake ninja
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf ssh://git@github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf https://github.com/

      # It is needed as we use some commands which a deprecated in newer versions of boost
      - name: Prepare environment Install BOOST
        shell: zsh {0}
        run: |
          curl -L -o boost_1_71_0.tar.gz https://boostorg.jfrog.io/artifactory/main/release/1.71.0/source/boost_1_71_0.tar.gz
          tar xzf ./boost_1_71_0.tar.gz
          cd ./boost_1_71_0
          ./bootstrap.sh --prefix=/opt/homebrew
          ./bootstrap.sh --prefix=/usr/local
          ./b2
          ./b2 install

      - name: Building the Solidity compiler
        run: |
          # remove warning-as-error flag in cmake
          sed '/option(PEDANTIC "Enable extra warnings and pedantic build flags. Treat all warnings as errors." ON)/d' CMakeLists.txt
          mkdir -p ./build
          cd ./build
          cmake .. -DCMAKE_BUILD_TYPE="Release" -DSOLC_VERSION_ZKEVM="${{ inputs.ZKEVM_RELEASE_TAG }}" -DUSE_Z3=OFF
          make -j2
          pwd
          ls -la ./solc/
          ls -la ./solc/solc

      - name: Prepare binary file name
        shell: zsh {0}
        run: |
          mkdir -p ./releases/macosx-amd64
          mv  ./build/solc/solc ./releases/macosx-amd64/solc-macosx-amd64-v${{ inputs.BRANCH_TAG }}-${{ inputs.ZKEVM_RELEASE_TAG }}

      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3
        with:
          name: release_macos_amd64
          path: releases

  build_linux:
    runs-on: [self-hosted, ci-runner]
    container:
      image: matterlabs/llvm_runner:latest
      credentials:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    strategy:
      fail-fast: false
    steps:
      - name: Checkout source
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
        with:
          submodules: recursive
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}
          ref: ${{ inputs.BRANCH_TAG }}

      - name: Prepare environment
        run: |
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf ssh://git@github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf https://github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf git@github.com:

      - name: Building the Solidity compiler
        run: |
          mkdir -p ./build
          cd ./build
          cmake .. -DCMAKE_BUILD_TYPE="Release" -DSOLC_VERSION_ZKEVM="${{ inputs.ZKEVM_RELEASE_TAG }}" -DUSE_Z3=OFF
          make -j$(nproc)
          pwd
          ls -la ./solc/
          ls -la ./solc/solc

      - name: Prepare binary file name
        run: |
          mkdir -p releases/linux-amd64
          mv ./build/solc/solc releases/linux-amd64/solc-linux-amd64-v${{ inputs.BRANCH_TAG }}-${{ inputs.ZKEVM_RELEASE_TAG }}

      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3
        with:
          name: release_linux
          path: releases

  build_win:
    runs-on: windows-2019-github-hosted-16core
    strategy:
      fail-fast: false
    steps:
      - name: Checkout source
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
        with:
          submodules: recursive
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}
          ref: ${{ inputs.BRANCH_TAG }}

      - name: Prepare environment
        run: |
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf ssh://git@github.com/
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf https://github.com/

      # Due to error in this script from repo, i've just copypasted it with fix
      - name: Install windows Deps
        run: |
          if ( -not (Test-Path "$PSScriptRoot\..\deps\boost") ) {
            New-Item -ItemType Directory -Force -Path "$PSScriptRoot\..\deps"

            Invoke-WebRequest -URI "https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-win64-x64.zip" -OutFile cmake.zip

            tar -xf cmake.zip
            mv cmake-3.18.2-win64-x64 "$PSScriptRoot\..\deps\cmake"

            # and serving it a page that requires JavaScript.
            Invoke-WebRequest -URI "https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.zip" -OutFile boost.zip

            tar -xf boost.zip
            cd boost_1_77_0
            .\bootstrap.bat
            .\b2 -j4 -d0 link=static runtime-link=static variant=release threading=multi address-model=64 --with-filesystem --with-system --with-program_options --with-test --prefix="$PSScriptRoot\..\deps\boost" install
            echo "BOOST_ROOT=$PSScriptRoot\..\deps\boost" >> $env:GITHUB_ENV
            echo "Boost_INCLUDE_DIR=$PSScriptRoot\..\deps\boost\boost" >> $env:GITHUB_ENV
            echo "BOOST_LIBRARYDIR=$PSScriptRoot\..\deps\boost\stage\lib" >> $env:GITHUB_ENV
            if ( -not $? ) { throw "Error building boost." }
            cd ..
          }

      - name: Building the Solidity compiler
        run: |
          # remove warning-as-erro flag in cmake
          sed '/option(PEDANTIC "Enable extra warnings and pedantic build flags. Treat all warnings as errors." ON)/d' CMakeLists.txt
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" .. -D SOLC_VERSION_ZKEVM="${{ inputs.ZKEVM_RELEASE_TAG }}" -D USE_Z3="OFF" -D CMAKE_BUILD_TYPE="Release" -D CMAKE_MSVC_RUNTIME_LIBRARY="MultiThreaded"
          cmake --build . --config Release

      - name: Prepare binary file name
        run: |
          mkdir -p releases\windows-amd64
          ls .\build\solc\Release\
          mv .\build\solc\Release\solc.exe releases\windows-amd64\solc-windows-amd64-v${{ inputs.BRANCH_TAG }}-${{ inputs.ZKEVM_RELEASE_TAG }}.exe

      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3
        with:
          name: release_win
          path: releases

  prepare_release:
    runs-on: ubuntu-latest
    needs:
      - build_win
      - build_linux
      - build_macos_amd64
    steps:
      - name: Checkout source
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
        with:
          fetch-depth: 0
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}

      - name: Download MacOS amd64 artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3
        with:
          name: release_macos_amd64
          path: releases

      - name: Download Linux artifacts
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3
        with:
          name: release_linux
          path: releases

      - name: Download Windows artifacts
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3
        with:
          name: release_win
          path: releases

      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}

      - name: Checkout repo with binaries
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
        with:
          repository: matter-labs/era-solc-bin
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}
          path: public_repo
          ref: main

      - name: List binaries to be released
        run: |
          tree ./releases

      - name: Push binaries
        run: |
          chmod -R +x releases/
          cp -R releases/* public_repo/
          cd public_repo
          git config --global user.email "dev-robot@matterlabs.dev"
          git config --global user.name "zksync-admin-bot2"
          git add .
          git commit -m "Release: ${{ steps.tag_name.outputs.current_version }}"
          git push
