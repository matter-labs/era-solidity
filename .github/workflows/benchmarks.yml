name: Benchmarking

on:
  workflow_dispatch:
    inputs:
      compiler_llvm_benchmark_mode:
        description: "Mode filter for compiler-llvm benchmarks"
        required: false
        default: "+M^B3"
      compiler_llvm_benchmark_path:
        description: "Path filter for compiler-llvm benchmarks"
        required: false
        default: "tests/solidity/"
      compiler_tester_reference_branch:
        description: "compiler-tester branch to use as a benchmark reference"
        required: false
        default: "main"
      compiler_tester_candidate_branch:
        description: "compiler-tester branch to use as a benchmark candidate"
        required: false
        default: "main"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  benchmarks:
    strategy:
      matrix:
        type: [ "reference", "candidate" ]
    name: ${{ matrix.type }}
    runs-on: [self-hosted, ci-runner-compiler]
    container:
      image: matterlabs/llvm_runner:ubuntu22-llvm15-latest
      options: -m 110g
    env:
      LLVM_BENCHMARK_MODE: ${{ github.event.inputs.compiler_llvm_benchmark_mode || '+M^B3' }}
      LLVM_BENCHMARK_PATH: ${{ github.event.inputs.compiler_llvm_benchmark_path || 'tests/solidity/' }}
      RUST_BACKTRACE: full
    steps:
      - name: Define branches
        shell: bash
        run: |
          echo "TESTING_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV
          if [ "${{ matrix.type }}" = "candidate" ]; then
            echo "COMPILER_TESTER_BRANCH_NAME=${{ github.event.inputs.compiler_tester_candidate_branch || 'main' }}" >> $GITHUB_ENV
          else
            echo "COMPILER_TESTER_BRANCH_NAME=${{ github.event.inputs.compiler_tester_reference_branch || 'main' }}" >> $GITHUB_ENV
          fi

      - name: Checking out the compiler-tester
        uses: actions/checkout@v4
        with:
          repository: matter-labs/era-compiler-tester
          submodules: recursive
          ref: ${{ env.COMPILER_TESTER_BRANCH_NAME }}
          persist-credentials: false

      - name: Checking out the Solidity repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: solidity

      - name: Building the Solidity compiler
        working-directory: solidity
        run: |
          mkdir -p ./build
          cd ./build
          cmake .. -DCMAKE_BUILD_TYPE='Release' -DSOLC_VERSION_ZKEVM='1.0.0-lts' -DPEDANTIC=OFF -DCMAKE_CXX_FLAGS='-w' -DUSE_Z3=OFF -DUSE_CVC4=OFF
          make -j$(nproc)

      - name: Build LLVM
        uses: ./.github/actions/build-llvm

      - name: Benchmarking ${{ matrix.type }}
        id: compiler_tester_run
        run: |
          mkdir -p './solc-bin/'
          cp './solidity/build/solc/solc' "./solc-bin/solc-${{ env.TESTING_BRANCH }}"
          chmod +x "./solc-bin/solc-${{ env.TESTING_BRANCH }}"

          export LLVM_SYS_150_PREFIX="$(pwd)/target-llvm/target-final/"
          cargo build --verbose --release --bin 'compiler-tester'
          cargo build --verbose --release --manifest-path /usr/local/cargo/git/checkouts/era-compiler-solidity-*/*/Cargo.toml --target-dir './target-zksolc/'

          ./target/release/compiler-tester \
            --zksolc './target-zksolc/release/zksolc' \
            --path="${{ env.BENCHMARK_PATH || '' }}" \
            --mode="${{ env.BENCHMARK_MODE || '' }}" \
            --benchmark='${{ matrix.type }}.json' \
            --solc-bin-config-path="configs/solc-bin-zkevm-${{ matrix.type }}-${{ env.TESTING_BRANCH }}.json"

      - uses: actions/upload-artifact@v4
        with:
          name: solc-${{ matrix.type }}-benchmark
          path: ${{ matrix.type }}.json


  benchmarks_analysis:
    runs-on: [matterlabs-ci-runner]
    needs: benchmarks
    container:
      image: matterlabs/llvm_runner:ubuntu22-llvm15-latest
    steps:
      - name: Checking out the compiler-tester repository
        uses: actions/checkout@v4
        with:
          repository: matter-labs/era-compiler-tester
          submodules: recursive

      - uses: actions/download-artifact@v4
        with:
          pattern: solc-*
          merge-multiple: true

      - name: Comparing the benchmark results
        id: compiler_tester_run
        run: |
          cargo run --release --bin benchmark-analyzer -- \
            --reference 'reference.json' \
            --candidate 'candidate.json' \
            --output-file 'result.txt' && \
          chown 1000:1000 result.txt

      - name: Posting the benchmark results to the step summary
        run: |
          printf "Benchmark results:\n" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat ./compiler-tester/result.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat $GITHUB_STEP_SUMMARY > result.txt

      - name: Posting the benchmark results to a PR comment
        if: github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message-path: result.txt
